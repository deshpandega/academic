/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package screen.frontDeskAttendant;

import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.apache.log4j.Logger;
import source.department.Department;
import source.employee.Employee;
import source.hospital.Hospital;
import source.patient.Patient;
import source.person.Person;
import source.role.DoctorRole;
import source.role.PatientRole;
import source.role.Role;
import source.userAccount.UserAccount;
import source.util.UtilFunctions;

/**
 *
 * @author GaurangDeshpande
 */
public class CreateNewPatientJPanel extends javax.swing.JPanel {

    private JPanel cardContainer;
    private UserAccount account;
    private Department department;
    private Hospital hospital;
    private static Logger log;
    
    /**
     * Creates new form CreateNewPatientJPanel
     */
    CreateNewPatientJPanel(JPanel cardContainer, UserAccount account, Department department, Hospital hospital) {
        initComponents();
        this.cardContainer = cardContainer;
        this.account = account;
        this.department = department;
        this.hospital = hospital;
        log = Logger.getLogger(CreateNewPatientJPanel.class);
        
        lblLoggedInUser.setText(account.getEmployee().getPerson().getLastName()+", "+account.getEmployee().getPerson().getFirstName());
        
        populateDepartments();
        populateGender();
        populateSates();
    }
    
    private void populateDepartments(){
        cmbDepartments.removeAllItems();
        cmbDepartments.addItem("Select a department");
        for(Department department: hospital.getDepartmentDirectory().getDepartmentList()){
            for(Role role: department.getSupportedRole()){
                if(role instanceof DoctorRole){
                    cmbDepartments.addItem(department);
                    break;
                }
            }
        }
    }

    private void populateGender(){
        cmbGender.removeAllItems();
        cmbGender.addItem("Select a gender");
        for(String gender:UtilFunctions.populateGender()){
            cmbGender.addItem(gender);
        }
    }
    
    private void populateSates(){
        cmbState.removeAllItems();
        cmbState.addItem("Select a state");
        for(String state: UtilFunctions.populateStates()){
            cmbState.addItem(state);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblLoggedInUser = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        lblHeading = new javax.swing.JLabel();
        lblHospitalBranch = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtLastName = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtPasswordField = new javax.swing.JPasswordField();
        cmbGender = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        txtSSN = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtPhoneNumber = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtEmailID = new javax.swing.JTextField();
        txtAddressLine2 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtAddressLine1 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        cmbState = new javax.swing.JComboBox();
        txtZipcode = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        btnCreateEmployee = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        cmbDepartments = new javax.swing.JComboBox();
        cmbDoctors = new javax.swing.JComboBox();
        btnReset = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));

        lblLoggedInUser.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblLoggedInUser.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);

        btnBack.setBackground(new java.awt.Color(51, 51, 51));
        btnBack.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblHeading.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        lblHeading.setText("Create New Patient");

        lblHospitalBranch.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblHospitalBranch.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHospitalBranch.setText("Registration Details");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("First Name:");

        txtFirstName.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel6.setText("Last Name:");

        txtLastName.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel7.setText("Username:");

        txtUsername.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel8.setText("Password:");

        txtPasswordField.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        cmbGender.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel10.setText("Gender:");

        txtSSN.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel9.setText("Social Security Number:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel11.setText("Phone Number:");

        txtPhoneNumber.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel12.setText("Email:");

        txtEmailID.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        txtAddressLine2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel14.setText("Address Line 2:");

        txtAddressLine1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel13.setText("Address Line 1:");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel15.setText("City:");

        txtCity.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel16.setText("State:");

        cmbState.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        txtZipcode.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel17.setText("Zip:");

        btnCreateEmployee.setBackground(new java.awt.Color(51, 51, 51));
        btnCreateEmployee.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnCreateEmployee.setForeground(new java.awt.Color(255, 255, 255));
        btnCreateEmployee.setText("Create Patient");
        btnCreateEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateEmployeeActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel5.setText("Assigned Department:");

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel18.setText("Assigned Doctor:");

        cmbDepartments.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        cmbDepartments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDepartmentsActionPerformed(evt);
            }
        });

        cmbDoctors.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        btnReset.setBackground(new java.awt.Color(51, 51, 51));
        btnReset.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnReset.setForeground(new java.awt.Color(255, 255, 255));
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel19.setText("Age:");

        txtAge.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblLoggedInUser, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblHospitalBranch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblHeading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtUsername, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
                                            .addComponent(txtFirstName))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cmbDepartments, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cmbDoctors, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(btnCreateEmployee, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtZipcode)
                                            .addComponent(txtCity)
                                            .addComponent(txtAddressLine1)
                                            .addComponent(txtPhoneNumber)
                                            .addComponent(txtSSN, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(6, 6, 6)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(btnReset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(6, 6, 6)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(1, 1, 1)
                                                        .addComponent(cmbState, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(cmbGender, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(txtAddressLine2))
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(txtEmailID, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                .addGap(19, 19, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lblLoggedInUser, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                    .addComponent(lblHeading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblHospitalBranch, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbDepartments, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbDoctors, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSSN, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmailID, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAddressLine1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAddressLine2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbState, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtZipcode, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbGender, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCreateEmployee, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                    .addComponent(btnReset, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE))
                .addGap(25, 25, 25))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        goBack();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnCreateEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateEmployeeActionPerformed
        // TODO add your handling code here:
        boolean allDataEnteredCorrectly = validateData();
        if(allDataEnteredCorrectly){
            log.info(UtilFunctions.encrypt("CRT_PAT : "+account.getEmployee()));
            
            Patient patient = new Patient();
            Employee assignedDoctor = null;
            Person person = patient.assignPerson();
            UserAccount account = hospital.getUserAccountDirectory().createUserAccount();
            
            if (cmbDoctors.getSelectedItem()!=null&&!cmbDoctors.getSelectedItem().equals("Select a Doctor")) {
                 assignedDoctor = (Employee)cmbDoctors.getSelectedItem();
            }
            
            person.setFirstName(txtFirstName.getText().trim());
            person.setLastName(txtLastName.getText().trim());
            person.setGender((String)cmbGender.getSelectedItem());
            person.setAge((Integer.parseInt(txtAge.getText().trim())));
            person.setSocialSecurityNumber(txtSSN.getText().trim());
            person.setPhoneNumber(Long.parseLong(txtPhoneNumber.getText().trim()));
            person.setEmailAddress(txtEmailID.getText().trim());
            person.getAddress().setAddLine1(txtAddressLine1.getText().trim());
            person.getAddress().setAddLine2(txtAddressLine2.getText().trim());
            person.getAddress().setCity(txtCity.getText().trim());
            person.getAddress().setState((String)cmbState.getSelectedItem());
            person.getAddress().setZipcode(Integer.parseInt(txtZipcode.getText().trim()));
            
            patient.setPatientID(hospital.getCollectionCount().retrivePatientID());
            hospital.getPatientDirectory().createPatient(patient);
            if(assignedDoctor!=null){
                assignedDoctor.getPatientDirectory().createPatient(patient);
            }
            
            account.setPatient(patient);
            if(cmbDoctors.getSelectedItem()!=null&&!cmbDoctors.getSelectedItem().equals("Select a Doctor")){
                account.setEmployee((Employee) cmbDoctors.getSelectedItem());
            }
            account.setUsername(txtUsername.getText().trim());
            account.setPassword(String.valueOf(txtPasswordField.getPassword()));
            account.setRole(new PatientRole());

            txtFirstName.setText("");
            txtLastName.setText("");
            txtUsername.setText("");
            txtPasswordField.setText("");
            txtSSN.setText("");
            txtAge.setText("");
            txtPhoneNumber.setText("");
            txtEmailID.setText("");
            txtAddressLine1.setText("");
            txtAddressLine2.setText("");
            txtCity.setText("");
            txtZipcode.setText("");
            
            cmbGender.setSelectedIndex(0);
            cmbState.setSelectedIndex(0);
            cmbDepartments.setSelectedIndex(0);
            if(cmbDoctors.getItemCount()!=0){
                cmbDoctors.setSelectedIndex(0);
            }
            

            JOptionPane.showMessageDialog(null,"Patient Created!", "INFORMATION", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnCreateEmployeeActionPerformed

    private void cmbDepartmentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDepartmentsActionPerformed
        // TODO add your handling code here:
        Object dept = cmbDepartments.getSelectedItem();
        if (dept != null && (!dept.equals("Select a department"))) {
            cmbDoctors.removeAllItems();
            cmbDoctors.addItem("Select a Doctor");
            //Department department = (Department) dept;
            //Role doctorRole = new DoctorRole();
            Department department = (Department) dept;
            for (UserAccount account : department.getUserAccountDirectory().getUserAccountList()) {
                if (account.getRole() instanceof DoctorRole) {
                    cmbDoctors.addItem(account.getEmployee());
                }
            }
//            for (UserAccount account : hospital.getUserAccountDirectory().getUserAccountList()) {
//                if (doctorRole.getClass().equals(account.getRole().getClass())) {
//                    Employee empAcc = account.getEmployee();
//                    for (Employee empDept : department.getEmployeeDirectory().getEmployeeList()) {
//                        if (empDept.equals(empAcc)) {
//                            cmbDoctors.addItem(empAcc);
//                        }
//                    }
//                }
//            }
        }
    }//GEN-LAST:event_cmbDepartmentsActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        txtFirstName.setText("");
            txtLastName.setText("");
            txtUsername.setText("");
            txtPasswordField.setText("");
            txtSSN.setText("");
            txtAge.setText("");
            txtPhoneNumber.setText("");
            txtEmailID.setText("");
            txtAddressLine1.setText("");
            txtAddressLine2.setText("");
            txtCity.setText("");
            txtZipcode.setText("");
            
            cmbGender.setSelectedIndex(0);
            cmbState.setSelectedIndex(0);
            cmbDepartments.setSelectedIndex(0);
            cmbDoctors.setSelectedIndex(0);
    }//GEN-LAST:event_btnResetActionPerformed

    private boolean validateData(){
        int i=0;
        
        char[] passwordCharArray = txtPasswordField.getPassword();
        String passwordEntered = String.valueOf(passwordCharArray);
        
        //Validate First Name
        if (txtFirstName.getText().trim().equalsIgnoreCase("") || txtFirstName.getText().trim() == null) {
            txtFirstName.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            JOptionPane.showMessageDialog(null, "Please enter First Name", "WARNING", JOptionPane.WARNING_MESSAGE);
            i++;
        } else if (!UtilFunctions.validateTextOnly(txtFirstName.getText().trim())) {
            txtFirstName.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            JOptionPane.showMessageDialog(null, "Please enter only alphabets in First Name", "WARNING", JOptionPane.WARNING_MESSAGE);
            i++;
        } else {
            txtFirstName.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
        }
        
        //Validate Last Name
        if(txtLastName.getText().trim().equalsIgnoreCase("")||txtLastName.getText().trim()==null){
            txtLastName.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            JOptionPane.showMessageDialog(null, "Please enter Last Name", "WARNING", JOptionPane.WARNING_MESSAGE);
            i++;
        }
        else if(!UtilFunctions.validateTextOnly(txtLastName.getText().trim())){
            txtLastName.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            JOptionPane.showMessageDialog(null, "Please enter only alphabets in Last Name", "WARNING", JOptionPane.WARNING_MESSAGE);
            i++;
        }
        else{
            txtLastName.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
        }
        
        //Validate Username
        if(txtUsername.getText().trim().equalsIgnoreCase("")||txtUsername.getText().trim()==null){
            txtUsername.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            JOptionPane.showMessageDialog(null, "Please enter Username", "WARNING", JOptionPane.WARNING_MESSAGE);
            i++;
        }
        else if(!UtilFunctions.validateUsernameCriteria(txtUsername.getText().trim())){
            txtUsername.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            JOptionPane.showMessageDialog(null, "Username must be between 6-20 characters", "WARNING", JOptionPane.WARNING_MESSAGE);
            i++;
        }
        else{
            txtUsername.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
        }
        
        //Validate Password
        if(passwordEntered.equalsIgnoreCase("")||passwordEntered==null){
            txtPasswordField.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            JOptionPane.showMessageDialog(null, "Please enter Password", "WARNING", JOptionPane.WARNING_MESSAGE);
            i++;
        }
        else if(!UtilFunctions.validatePasswordCriteria(passwordEntered)){
            txtPasswordField.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            JOptionPane.showMessageDialog(null, "Password must contain:\n 6-20 characters\n Must haave ONE uppercase character\n Must have ONE lower case character\n Must have ONE number\n Must have ONE special character", "WARNING", JOptionPane.WARNING_MESSAGE);
            i++;
        }
        else{
            txtPasswordField.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
        }
        
        //Validate SSN
        if(txtSSN.getText().trim().equalsIgnoreCase("")||txtSSN.getText().trim()==null){
            txtSSN.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
        }
        else if(!UtilFunctions.validateSSN(txtSSN.getText().trim())){
            txtSSN.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            JOptionPane.showMessageDialog(null, "Please enter only 9 numericals in Social Security Number", "WARNING", JOptionPane.WARNING_MESSAGE);
            i++;
        }
        else{
            txtSSN.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
        }
        
        //Validate Gender
        if(cmbGender.getSelectedItem().equals("Select a gender")){
            cmbGender.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            JOptionPane.showMessageDialog(null, "Please select gender", "WARNING", JOptionPane.WARNING_MESSAGE);
            i++;
        }
        else{
            cmbGender.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
        }
        
        //Validate Phone Number
        if(txtAge.getText().trim().equalsIgnoreCase("")||txtAge.getText().trim()==null){
            txtAge.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            JOptionPane.showMessageDialog(null, "Please enter age", "WARNING", JOptionPane.WARNING_MESSAGE);
            i++;
        }
        else if(!UtilFunctions.validateNumericalsOnly(txtAge.getText().trim())){
            txtAge.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            JOptionPane.showMessageDialog(null, "Please enter only numericals in age", "WARNING", JOptionPane.WARNING_MESSAGE);
            i++;
        }
        else{
            txtAge.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
        }
        
        //Validate Phone Number
        if(txtPhoneNumber.getText().trim().equalsIgnoreCase("")||txtPhoneNumber.getText().trim()==null){
            txtPhoneNumber.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            JOptionPane.showMessageDialog(null, "Please enter Phone Number", "WARNING", JOptionPane.WARNING_MESSAGE);
            i++;
        }
        else if(!UtilFunctions.validateNumericalsOnly(txtPhoneNumber.getText().trim())){
            txtPhoneNumber.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            JOptionPane.showMessageDialog(null, "Please enter only numericals in Phone Number", "WARNING", JOptionPane.WARNING_MESSAGE);
            i++;
        }
        else if(txtPhoneNumber.getText().length()!=10){
            txtPhoneNumber.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            JOptionPane.showMessageDialog(null, "Please enter 10 dgit Phone Number without . and -", "WARNING", JOptionPane.WARNING_MESSAGE);
            i++;
        }
        else{
            txtPhoneNumber.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
        }
        
        //Validate Email
        if(txtEmailID.getText().trim().equalsIgnoreCase("")||txtEmailID.getText().trim()==null){
            txtEmailID.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
        }
        else if(!UtilFunctions.validateEmailAddress(txtEmailID.getText().trim())){
            txtEmailID.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            JOptionPane.showMessageDialog(null, "Please enter valid Email", "WARNING", JOptionPane.WARNING_MESSAGE);
            i++;
        }
        else{
            txtEmailID.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
        }
        
        //Validate Address Line 1
        if(txtAddressLine1.getText().trim().equalsIgnoreCase("")||txtAddressLine1.getText().trim()==null){
            txtAddressLine1.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            JOptionPane.showMessageDialog(null, "Please enter Address Line 1", "WARNING", JOptionPane.WARNING_MESSAGE);
            i++;
        }
        else if(!UtilFunctions.validateNumberAndText(txtAddressLine1.getText().trim())){
            txtAddressLine1.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            JOptionPane.showMessageDialog(null, "Please enter only text and numbers in Addres Line 1", "WARNING", JOptionPane.WARNING_MESSAGE);
            i++;
        }
        else{
            txtAddressLine1.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
        }
        
        //Validate Address Line 2
        if(!UtilFunctions.validateNumberAndText(txtAddressLine2.getText().trim())){
            txtAddressLine2.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            JOptionPane.showMessageDialog(null, "Please enter only text and numbers in Address Line 2", "WARNING", JOptionPane.WARNING_MESSAGE);
            i++;
        }
        else{
            txtAddressLine2.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
        }
        
        //Validate City
        if(txtCity.getText().trim().equalsIgnoreCase("")||txtCity.getText().trim()==null){
            txtCity.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            JOptionPane.showMessageDialog(null, "Please enter City", "WARNING", JOptionPane.WARNING_MESSAGE);
            i++;
        }
        else if(!UtilFunctions.validateTextOnly(txtCity.getText().trim())){
            txtCity.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            JOptionPane.showMessageDialog(null, "Please enter only text in City", "WARNING", JOptionPane.WARNING_MESSAGE);
            i++;
        }
        else{
            txtCity.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
        }
        
        //Validate State
        if(cmbState.getSelectedItem().equals("Select a state")){
            cmbState.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            JOptionPane.showMessageDialog(null, "Please select State", "WARNING", JOptionPane.WARNING_MESSAGE);
            i++;
        }
        else{
            cmbState.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
        }
        
        //Validate Zip
        if(txtZipcode.getText().trim().equalsIgnoreCase("")||txtZipcode.getText().trim()==null){
            txtZipcode.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            JOptionPane.showMessageDialog(null, "Please enter Zip", "WARNING", JOptionPane.WARNING_MESSAGE);
            i++;
        }
        else if(!UtilFunctions.validateZip(txtZipcode.getText().trim())){
            txtZipcode.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            JOptionPane.showMessageDialog(null, "Please enter only 5 numbers in Zip", "WARNING", JOptionPane.WARNING_MESSAGE);
            i++;
        }
        else{
            txtZipcode.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
        }
        
        if(i==0){
            return true;
        }
        else{
            return false;
        }
    }
    
    private void goBack(){
        cardContainer.remove(this);
        CardLayout layout = (CardLayout) cardContainer.getLayout();
        layout.previous(cardContainer);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreateEmployee;
    private javax.swing.JButton btnReset;
    private javax.swing.JComboBox cmbDepartments;
    private javax.swing.JComboBox cmbDoctors;
    private javax.swing.JComboBox cmbGender;
    private javax.swing.JComboBox cmbState;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lblHeading;
    private javax.swing.JLabel lblHospitalBranch;
    private javax.swing.JLabel lblLoggedInUser;
    private javax.swing.JTextField txtAddressLine1;
    private javax.swing.JTextField txtAddressLine2;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtEmailID;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JPasswordField txtPasswordField;
    private javax.swing.JTextField txtPhoneNumber;
    private javax.swing.JTextField txtSSN;
    private javax.swing.JTextField txtUsername;
    private javax.swing.JTextField txtZipcode;
    // End of variables declaration//GEN-END:variables
}
