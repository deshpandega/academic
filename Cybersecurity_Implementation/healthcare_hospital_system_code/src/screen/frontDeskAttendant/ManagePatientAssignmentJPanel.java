/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package screen.frontDeskAttendant;

import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.apache.log4j.Logger;
import source.department.Department;
import source.employee.Employee;
import source.hospital.Hospital;
import source.patient.Patient;
import source.role.DoctorRole;
import source.role.Role;
import source.userAccount.UserAccount;
import source.util.UtilFunctions;

/**
 *
 * @author GaurangDeshpande
 */
public class ManagePatientAssignmentJPanel extends javax.swing.JPanel {

    private JPanel cardContainer;
    private UserAccount account;
    private Department department;
    private Hospital hospital;
    private Employee selectedDoctorForSearchedPatient;
    private Patient searchedPatient;
    private static Logger log;
    
    /**
     * Creates new form ManagePatientAssignmentJPanel
     */
    ManagePatientAssignmentJPanel(JPanel cardContainer, UserAccount account, Department department, Hospital hospital) {
        initComponents();
        this.cardContainer = cardContainer;
        this.account = account;
        this.department = department;
        this.hospital = hospital;
        log = Logger.getLogger(ManagePatientAssignmentJPanel.class);
        
        lblLoggedInUser.setText(account.getEmployee().getPerson().getLastName()+", "+account.getEmployee().getPerson().getFirstName());
        cmbDoctors.setEnabled(false);
        cmbDepartments.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        lblHeading = new javax.swing.JLabel();
        lblLoggedInUser = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtPatientID = new javax.swing.JTextField();
        btnSearchPatient = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        lblFirstName = new javax.swing.JLabel();
        lblLastName = new javax.swing.JLabel();
        lblSSN = new javax.swing.JLabel();
        lblGender = new javax.swing.JLabel();
        lblPhoneNumber = new javax.swing.JLabel();
        lblAddressLine1 = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        lblZip = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        lblAddressLine2 = new javax.swing.JLabel();
        lblState = new javax.swing.JLabel();
        cmbDoctors = new javax.swing.JComboBox();
        cmbDepartments = new javax.swing.JComboBox();
        btnModifyPatientAssignment = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        btnBack.setBackground(new java.awt.Color(51, 51, 51));
        btnBack.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblHeading.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        lblHeading.setText("Manage Patient Assignment");

        lblLoggedInUser.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblLoggedInUser.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("Patient ID:");

        txtPatientID.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        btnSearchPatient.setBackground(new java.awt.Color(51, 51, 51));
        btnSearchPatient.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnSearchPatient.setForeground(new java.awt.Color(255, 255, 255));
        btnSearchPatient.setText("Search Patient");
        btnSearchPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchPatientActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel5.setText("First Name:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel7.setText("Assigned Department:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel8.setText("Assigned Doctor:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel9.setText("Social Security Number:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel10.setText("Gender:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel11.setText("Phone Number:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel12.setText("Email:");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel13.setText("Address Line 1:");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel14.setText("Address Line 2:");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel15.setText("City:");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel17.setText("Zip:");

        lblFirstName.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        lblLastName.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        lblSSN.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        lblGender.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        lblPhoneNumber.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        lblAddressLine1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        lblCity.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        lblZip.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        lblEmail.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        lblAddressLine2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        lblState.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        cmbDoctors.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        cmbDoctors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDoctorsActionPerformed(evt);
            }
        });

        cmbDepartments.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        cmbDepartments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDepartmentsActionPerformed(evt);
            }
        });

        btnModifyPatientAssignment.setBackground(new java.awt.Color(51, 51, 51));
        btnModifyPatientAssignment.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnModifyPatientAssignment.setForeground(new java.awt.Color(255, 255, 255));
        btnModifyPatientAssignment.setText("Modify Patient Assignment");
        btnModifyPatientAssignment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifyPatientAssignmentActionPerformed(evt);
            }
        });

        btnReset.setBackground(new java.awt.Color(51, 51, 51));
        btnReset.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnReset.setForeground(new java.awt.Color(255, 255, 255));
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setText("Last Name:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel2.setText("State:");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel16.setText("Age:");

        lblAge.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblLoggedInUser, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblHeading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnSearchPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnModifyPatientAssignment, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnReset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(6, 6, 6)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                            .addComponent(lblFirstName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                            .addComponent(lblAddressLine1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                            .addComponent(lblCity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                            .addComponent(lblZip, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                            .addComponent(lblSSN, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
                                                            .addComponent(lblPhoneNumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(cmbDepartments, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                                                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(cmbDoctors, 0, 267, Short.MAX_VALUE)
                                            .addComponent(lblEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lblGender, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lblLastName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lblAddressLine2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lblState, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lblAge, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addGap(29, 29, 29))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblLoggedInUser, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSearchPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbDepartments, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbDoctors, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPhoneNumber, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lblAge, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                                    .addComponent(lblSSN, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblAddressLine2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblAddressLine1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                                .addComponent(lblCity, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                            .addComponent(lblState, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblZip, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblGender, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnModifyPatientAssignment, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(77, 77, 77))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        goBack();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSearchPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchPatientActionPerformed
        // TODO add your handling code here:
        boolean allDataEnteredCorrectly = validateData();
        if(allDataEnteredCorrectly){
            cmbDepartments.removeAllItems();
            cmbDepartments.addItem("Select a department");
            cmbDoctors.removeAllItems();
            cmbDoctors.addItem("Select a Doctor");
            
            searchedPatient = hospital.getPatientDirectory().searchPatientByID(txtPatientID.getText().trim());
            if(searchedPatient==null){
                searchedPatient = hospital.getPatientDirectory().searchPatientByName(txtPatientID.getText().trim());
                if(searchedPatient==null){
                    try{
                        long phoneNumber = Long.parseLong(txtPatientID.getText().trim());
                        searchedPatient = hospital.getPatientDirectory().searchPatientByPhoneNumber(phoneNumber);
                    }
                    catch(Exception e){
                        
                    }
                    if(searchedPatient==null){
                        searchedPatient = hospital.getPatientDirectory().searchPatientBySSN(txtPatientID.getText().trim());
                        if(searchedPatient==null){
                            JOptionPane.showMessageDialog(null, "Patient not found!", "WARNING", JOptionPane.WARNING_MESSAGE);
                            return;
                        }
                    }
                }
            }
            
            lblFirstName.setText(searchedPatient.getPerson().getFirstName());
            lblLastName.setText(searchedPatient.getPerson().getLastName());
            lblSSN.setText(searchedPatient.getPerson().getSocialSecurityNumber());
            lblGender.setText(searchedPatient.getPerson().getGender());
            lblAge.setText(searchedPatient.getPerson().getGender());
            lblPhoneNumber.setText(String.valueOf(searchedPatient.getPerson().getPhoneNumber()));
            lblEmail.setText(searchedPatient.getPerson().getEmailAddress());
            lblAddressLine1.setText(searchedPatient.getPerson().getAddress().getAddLine1());
            lblAddressLine2.setText(searchedPatient.getPerson().getAddress().getAddLine2());
            lblCity.setText(searchedPatient.getPerson().getAddress().getCity());
            lblState.setText(searchedPatient.getPerson().getAddress().getState());
            lblZip.setText(String.valueOf(searchedPatient.getPerson().getAddress().getZipcode()));
            
            selectDepartmentForSelectedPatient();
        }
    }//GEN-LAST:event_btnSearchPatientActionPerformed

    private void selectDepartmentForSelectedPatient() {
        for (UserAccount userAccount : hospital.getUserAccountDirectory().getUserAccountList()) {
            if (searchedPatient.equals(userAccount.getPatient())) {
                selectedDoctorForSearchedPatient = userAccount.getEmployee();
                for (Department depat : hospital.getDepartmentDirectory().getDepartmentList()) {
                    for (Employee emp : depat.getEmployeeDirectory().getEmployeeList()) {
                        if (emp.equals(selectedDoctorForSearchedPatient)) {
                            cmbDepartments.addItem(depat);
                            cmbDepartments.setSelectedItem(depat);
                            break;
                        }
                    }
                }
                break;
            }
        }
    }
    
    private void cmbDoctorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDoctorsActionPerformed
        // TODO add your handling code here:
        if(btnModifyPatientAssignment.getText().equalsIgnoreCase("Modify Patient Assignment")){
            if(cmbDoctors.getItemCount()!=0&&!cmbDoctors.getSelectedItem().equals("Select a Doctor"))
                selectedDoctorForSearchedPatient = (Employee) cmbDoctors.getSelectedItem();
        }
    }//GEN-LAST:event_cmbDoctorsActionPerformed

    private void cmbDepartmentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDepartmentsActionPerformed
        // TODO add your handling code here:
        Object dept = cmbDepartments.getSelectedItem();
        if (dept != null && (!dept.equals("Select a department"))) {
            cmbDoctors.removeAllItems();
            cmbDoctors.addItem("Select a Doctor");
            Department department = (Department) dept;
            //Role doctorRole = new DoctorRole();
            for(UserAccount account: department.getUserAccountDirectory().getUserAccountList()){
                if(account.getRole() instanceof DoctorRole){
                    cmbDoctors.addItem(account.getEmployee());
                }
            }
//            for (UserAccount account : hospital.getUserAccountDirectory().getUserAccountList()) {
//                if (doctorRole.getClass().equals(account.getRole().getClass())) {
//                    Employee empAcc = account.getEmployee();
//                    for (Employee empDept : department.getEmployeeDirectory().getEmployeeList()) {
//                        if (empDept.equals(empAcc)) {
//                            cmbDoctors.addItem(empAcc);
//                        }
//                    }
//                }
//            }
            if(selectedDoctorForSearchedPatient!=null){
                cmbDoctors.setSelectedItem(selectedDoctorForSearchedPatient);
            }
        }
    }//GEN-LAST:event_cmbDepartmentsActionPerformed

    private void btnModifyPatientAssignmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyPatientAssignmentActionPerformed
        // TODO add your handling code here:
        if(lblFirstName.getText().trim().equalsIgnoreCase("")||lblFirstName.getText().trim()==null){
            JOptionPane.showMessageDialog(null, "Please enter a search criteria","WARNING", JOptionPane.WARNING_MESSAGE);
        }
        else{
            if (btnModifyPatientAssignment.getText().trim().equalsIgnoreCase("Modify Patient Assignment")) {
                cmbDoctors.setEnabled(true);
                cmbDepartments.setEnabled(true);
                selectedDoctorForSearchedPatient = null;
                btnModifyPatientAssignment.setText("Save Assignment");
                btnReset.setText("Cancel");
                txtPatientID.setEnabled(false);
                btnSearchPatient.setEnabled(false);
                populateDepartments();
                cmbDoctors.removeAllItems();
            } else if (btnModifyPatientAssignment.getText().trim().equalsIgnoreCase("Save Assignment")) {
                cmbDoctors.setEnabled(false);
                cmbDepartments.setEnabled(false);
                txtPatientID.setEnabled(true);
                btnSearchPatient.setEnabled(true);
                btnModifyPatientAssignment.setText("Modify Patient Assignment");
                btnReset.setText("Reset");
                boolean allDataEnteredCorrectly = validateModifiedData();
                if (allDataEnteredCorrectly) {
                    //Delete patient from doctor list first
                    for(Department department: hospital.getDepartmentDirectory().getDepartmentList()){
                        int i=0;
                        for(UserAccount account: department.getUserAccountDirectory().getUserAccountList()){
                            if(account.getRole() instanceof DoctorRole){
                                for(Patient patient: account.getEmployee().getPatientDirectory().getPatientDirectory()){
                                    if(patient.equals(searchedPatient)){
                                        account.getEmployee().getPatientDirectory().deletePatient(patient);
                                        log.info(UtilFunctions.encrypt("PAT_REM : "+this.account.getEmployee()));
                                        i++;
                                        break;
                                    }
                                }
                            }
                            if(i!=0){
                                break;
                            }
                        }
                        if(i!=0){
                            break;
                        }
                    }
//                    for (UserAccount userAccount : hospital.getUserAccountDirectory().getUserAccountList()) {
//                        if(userAccount.getRole() instanceof DoctorRole){
//                            for(Patient patient:userAccount.getEmployee().getPatientDirectory().getPatientDirectory()){
//                                if(patient.equals(searchedPatient)){
//                                    userAccount.getEmployee().getPatientDirectory().deletePatient(searchedPatient);
//                                    break;
//                                }
//                            }
//                        }
//                    }
                    //Add patient to assigned doctor list
                    for(UserAccount ua : hospital.getUserAccountDirectory().getUserAccountList()){
                        if(searchedPatient.equals(ua.getPatient())){
                            ua.setEmployee((Employee) cmbDoctors.getSelectedItem());
                            ((Employee) cmbDoctors.getSelectedItem()).getPatientDirectory().createPatient(searchedPatient);
                            log.info(UtilFunctions.encrypt("PAT_ADD : "+this.account.getEmployee()));
                            break;
                        }
                    }
                    
//                    for (Department department : hospital.getDepartmentDirectory().getDepartmentList()) {
//                        int i=0;
//                        for (UserAccount userAccount : department.getUserAccountDirectory().getUserAccountList()) {
//                            if (searchedPatient.equals(userAccount.getPatient())) {
//                                selectedDoctorForSearchedPatient = (Employee) cmbDoctors.getSelectedItem();
//                                userAccount.setEmployee(selectedDoctorForSearchedPatient);
//                                selectedDoctorForSearchedPatient.getPatientDirectory().createPatient(searchedPatient);
//                                i++;
//                                break;
//                            }
//                        }
//                        if(i!=0){
//                            break;
//                        }
//                    }
                }
            }
        }  
    }//GEN-LAST:event_btnModifyPatientAssignmentActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        if(btnReset.getText().trim().equalsIgnoreCase("Reset")) {
            if (lblFirstName.getText().trim().equalsIgnoreCase("") || lblFirstName.getText().trim() == null) {

            } else {
                lblFirstName.setText("");
                lblLastName.setText("");
                lblSSN.setText("");
                lblPhoneNumber.setText("");
                lblEmail.setText("");
                lblAge.setText("");
                lblAddressLine1.setText("");
                lblAddressLine2.setText("");
                lblCity.setText("");
                lblZip.setText("");
                txtPatientID.setText("");

                cmbDepartments.removeAllItems();
                cmbDoctors.removeAllItems();
            }
        } else if (btnReset.getText().trim().equalsIgnoreCase("Cancel")) {
            txtPatientID.setEnabled(true);
            btnSearchPatient.setEnabled(true);
            selectDepartmentForSelectedPatient();
            btnModifyPatientAssignment.setText("Modify Patient Assignment");
            btnReset.setText("Reset");
            cmbDepartments.setEnabled(false);
            cmbDoctors.setEnabled(false);
        }
        

    }//GEN-LAST:event_btnResetActionPerformed
    
    private boolean validateModifiedData(){
        int i=0;
        if(cmbDepartments.getSelectedItem().equals("Select a department")){
            cmbDepartments.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            JOptionPane.showMessageDialog(null, "Please select department", "WARNING", JOptionPane.WARNING_MESSAGE);
            i++;
        }
        else{
            cmbDepartments.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
        }
        
        if(cmbDoctors.getSelectedItem().equals("Select a Doctor")){
            cmbDoctors.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            JOptionPane.showMessageDialog(null, "Please select doctor", "WARNING", JOptionPane.WARNING_MESSAGE);
            i++;
        }
        else{
            cmbDoctors.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
        }
        return true;
    }
    
    private void populateDepartments(){
        cmbDepartments.removeAllItems();
        cmbDepartments.addItem("Select a department");
        for(Department department: hospital.getDepartmentDirectory().getDepartmentList()){
            for(Role role: department.getSupportedRole()){
                if(role instanceof DoctorRole){
                    cmbDepartments.addItem(department);
                    break;
                }
            }
        }
    }
    
    private boolean validateData(){
        int i=0;
        
        //Validate Patient ID
        if (txtPatientID.getText().trim().equalsIgnoreCase("") || txtPatientID.getText().trim() == null) {
            txtPatientID.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            JOptionPane.showMessageDialog(null, "Please enter Patient ID, Patient Name, Paitent Phone Number or Patient SSN", "WARNING", JOptionPane.WARNING_MESSAGE);
            i++;
        } else if (!UtilFunctions.validateNumberAndText(txtPatientID.getText().trim())) {
            txtPatientID.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            JOptionPane.showMessageDialog(null, "Please enter only alphabets in First Name", "WARNING", JOptionPane.WARNING_MESSAGE);
            i++;
        } else {
            txtPatientID.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
        }
        
        if(i==0){
            return true;
        }
        else{
            return false;
        }
    }
    
    private void goBack(){
        cardContainer.remove(this);
        CardLayout layout = (CardLayout) cardContainer.getLayout();
        layout.previous(cardContainer);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnModifyPatientAssignment;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSearchPatient;
    private javax.swing.JComboBox cmbDepartments;
    private javax.swing.JComboBox cmbDoctors;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lblAddressLine1;
    private javax.swing.JLabel lblAddressLine2;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblHeading;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblLoggedInUser;
    private javax.swing.JLabel lblPhoneNumber;
    private javax.swing.JLabel lblSSN;
    private javax.swing.JLabel lblState;
    private javax.swing.JLabel lblZip;
    private javax.swing.JTextField txtPatientID;
    // End of variables declaration//GEN-END:variables
}
