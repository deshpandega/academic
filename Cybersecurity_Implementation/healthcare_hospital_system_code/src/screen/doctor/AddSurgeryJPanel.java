/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package screen.doctor;

import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.apache.log4j.Logger;
import source.department.Department;
import source.employee.Employee;
import source.hospital.Hospital;
import source.patient.Patient;
import source.patient.Surgery;
import source.role.DoctorRole;
import source.role.NurseRole;
import source.userAccount.UserAccount;
import source.util.Util;
import source.util.UtilFunctions;

/**
 *
 * @author GaurangDeshpande
 */
public class AddSurgeryJPanel extends javax.swing.JPanel {

    private JPanel cardContainer;
    private UserAccount account;
    private Patient patient;
    private Hospital hospital;
    ArrayList<Employee> assists;
    private static Logger log;
    
    /**
     * Creates new form AddPrescriptionJPanel
     */
    AddSurgeryJPanel(JPanel cardContainer, UserAccount account, Patient patient, Hospital hospital) {
        initComponents();
        this.cardContainer = cardContainer;
        this.account = account;
        this.patient = patient;
        this.hospital = hospital;
        log = Logger.getLogger(AddSurgeryJPanel.class);
        
        lblLoggedInUser.setText(account.getEmployee().getPerson().getLastName()+", "+account.getEmployee().getPerson().getFirstName());
        
        lblVisitDate.setText(String.valueOf(new Date()));
        lblPerformedBy.setText(account.getEmployee().getPerson().getFirstName()+" "+account.getEmployee().getPerson().getLastName());
        assists = new ArrayList<>();
        
        initialSetup();
        populateDoctorsCombo();
        populateTableAssists();
    }
    
    private void initialSetup() {
        txtSurgeryName.setText("");
        lblErrSurgeryName.setText("");
        lblErrSurgeryName.setVisible(false);
        
        txtSurgeryDate.setText("MM/dd/yyyy");
        txtSurgeryDate.setForeground(new Color(153,153,153));
        lblErrSurgeryDate.setText("");
        lblErrSurgeryDate.setVisible(false);
        
        txtSurgeryDescription.setText("");
        lblErrSurgeryDescription.setText("");
        lblErrSurgeryDescription.setVisible(false);
        
        txtComplications.setText("");
        lblErrSurgeryComplications.setText("");
        lblErrSurgeryComplications.setVisible(false);
        
        txtSurgeryOutcomes.setText("");
        lblErrSurgeryOutcome.setText("");
        lblErrSurgeryOutcome.setVisible(false);
        
        txtVisitReason.setText("");
        lblErrVisitReason.setText("");
        lblErrVisitReason.setVisible(false);
    }
    
    private void populateDoctorsCombo(){
        cmbDoctors.removeAllItems();
        cmbDoctors.addItem("Select a Doctor or Nurse");
        for (Department department : hospital.getDepartmentDirectory().getDepartmentList()) {
            for (UserAccount userAccount : department.getUserAccountDirectory().getUserAccountList()) {
                if (userAccount.getRole() instanceof DoctorRole || userAccount.getRole() instanceof NurseRole) {
                    if (!userAccount.equals(account)) {
                        cmbDoctors.addItem(userAccount.getEmployee());
                    }
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblLoggedInUser = new javax.swing.JLabel();
        lblHeading = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        lblErrVisitReason = new javax.swing.JLabel();
        lblVisitDate = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtVisitReason = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtSurgeryName = new javax.swing.JTextField();
        lblErrSurgeryName = new javax.swing.JLabel();
        txtSurgeryDate = new javax.swing.JTextField();
        txtComplications = new javax.swing.JTextField();
        lblErrSurgeryDate = new javax.swing.JLabel();
        lblErrSurgeryComplications = new javax.swing.JLabel();
        btnAddSurgery = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        txtSurgeryDescription = new javax.swing.JTextField();
        lblErrSurgeryDescription = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        txtSurgeryOutcomes = new javax.swing.JTextField();
        lblErrSurgeryOutcome = new javax.swing.JLabel();
        lblPerformedBy = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        cmbDoctors = new javax.swing.JComboBox();
        btnAddAssists = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAssistants = new javax.swing.JTable();
        jLabel20 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        lblLoggedInUser.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblLoggedInUser.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);

        lblHeading.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        lblHeading.setText("Add Surgery");

        btnBack.setBackground(new java.awt.Color(51, 51, 51));
        btnBack.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel12.setText("Visit Time:");

        lblErrVisitReason.setForeground(new java.awt.Color(255, 51, 0));
        lblErrVisitReason.setText("lblErr");

        lblVisitDate.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        txtVisitReason.setColumns(20);
        txtVisitReason.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        txtVisitReason.setRows(3);
        jScrollPane1.setViewportView(txtVisitReason);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel11.setText("Reason for visit:");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel13.setText("Surgery Name:");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel14.setText("Surgery Date:");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel15.setText("Complications:");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel16.setText("Outcome:");

        txtSurgeryName.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        lblErrSurgeryName.setForeground(new java.awt.Color(255, 51, 0));
        lblErrSurgeryName.setText("lblErr");

        txtSurgeryDate.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        txtSurgeryDate.setForeground(new java.awt.Color(153, 153, 153));
        txtSurgeryDate.setText("MM/dd/yyyy");
        txtSurgeryDate.setToolTipText("");
        txtSurgeryDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSurgeryDateFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSurgeryDateFocusLost(evt);
            }
        });

        txtComplications.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        lblErrSurgeryDate.setForeground(new java.awt.Color(255, 51, 0));
        lblErrSurgeryDate.setText("lblErr");

        lblErrSurgeryComplications.setForeground(new java.awt.Color(255, 51, 0));
        lblErrSurgeryComplications.setText("lblErr");

        btnAddSurgery.setBackground(new java.awt.Color(51, 51, 51));
        btnAddSurgery.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnAddSurgery.setForeground(new java.awt.Color(255, 255, 255));
        btnAddSurgery.setText("Add Surgery");
        btnAddSurgery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddSurgeryActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel17.setText("Description:");

        txtSurgeryDescription.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        lblErrSurgeryDescription.setForeground(new java.awt.Color(255, 51, 0));
        lblErrSurgeryDescription.setText("lblErr");

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel18.setText("Perfromed By:");

        txtSurgeryOutcomes.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        lblErrSurgeryOutcome.setForeground(new java.awt.Color(255, 51, 0));
        lblErrSurgeryOutcome.setText("lblErr");

        lblPerformedBy.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel19.setText("Assisted By:");

        cmbDoctors.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        btnAddAssists.setBackground(new java.awt.Color(51, 51, 51));
        btnAddAssists.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnAddAssists.setForeground(new java.awt.Color(255, 255, 255));
        btnAddAssists.setText("Add >");
        btnAddAssists.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddAssistsActionPerformed(evt);
            }
        });

        tblAssistants.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        tblAssistants.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Assisted By", "Department"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAssistants.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tblAssistants);

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Assisted By:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblLoggedInUser, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblHeading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblVisitDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(129, 129, 129)
                                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(lblPerformedBy, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(lblErrVisitReason, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE))
                                        .addGap(6, 6, 6)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(cmbDoctors, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(txtSurgeryOutcomes, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lblErrSurgeryOutcome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(btnAddAssists, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                            .addComponent(btnAddSurgery, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtComplications, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblErrSurgeryComplications, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtSurgeryDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblErrSurgeryDescription, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtSurgeryDate, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblErrSurgeryDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtSurgeryName, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblErrSurgeryName, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblLoggedInUser, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblVisitDate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPerformedBy, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblErrVisitReason)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSurgeryName, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblErrSurgeryName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSurgeryDate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblErrSurgeryDate))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSurgeryDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblErrSurgeryDescription))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtComplications, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblErrSurgeryComplications))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSurgeryOutcomes, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblErrSurgeryOutcome))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbDoctors, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAddAssists, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddSurgery, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(58, 58, 58))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        goBack();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAddSurgeryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddSurgeryActionPerformed
        // TODO add your handling code here:
        boolean allDataEnteredCorrectly = validateData();
        if(allDataEnteredCorrectly){
            log.info(UtilFunctions.encrypt("SUR : "+account.getEmployee()));
            Surgery surgery = patient.getSurgicalHistory().performNewSurgery();

            SimpleDateFormat formatter = new SimpleDateFormat("MM/dd/yyyy");
            surgery.setSurgeryType(txtSurgeryName.getText().trim());
            try{
                surgery.setSurgeryTime(formatter.parse(txtSurgeryDate.getText().trim()));
            }
            catch(Exception e){
                String message = e.getMessage();
            }
            surgery.setSurgeryDescription(txtSurgeryDescription.getText().trim());
            surgery.setSurgeryComplications(txtComplications.getText().trim());
            surgery.setSurgeryOutcome(txtSurgeryOutcomes.getText().trim());
            surgery.setPerformedBy(account.getEmployee());
            
            surgery.setSurgeryAssisstedBy(assists);
            
            Date lastVisit = new Date();
            patient.setLastVisited(lastVisit);
            patient.setComments(txtVisitReason.getText().trim());
            
            surgery.setPurpose(txtVisitReason.getText().trim());
            surgery.setVisitDate(lastVisit);

            initialSetup();
            if(patient.getPerson().getEmailAddress()!=null){
                UtilFunctions.sendEmail(patient.getPerson().getEmailAddress(), patient.getPerson().getFirstName()+" "+patient.getPerson().getLastName(), "Visit for Surgery", txtVisitReason.getText().trim());
            }
            JOptionPane.showMessageDialog(null,"Surgery Added!", "INFORMATION", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnAddSurgeryActionPerformed

    private void txtSurgeryDateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSurgeryDateFocusGained
        // TODO add your handling code here:
        if(txtSurgeryDate.getText().equals("MM/dd/yyyy")){
            txtSurgeryDate.setText(Util.BLANK_QUOTES);
        }
        txtSurgeryDate.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtSurgeryDateFocusGained

    private void txtSurgeryDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSurgeryDateFocusLost
        // TODO add your handling code here:
        if(txtSurgeryDate.getText().isEmpty()||txtSurgeryDate.getText().equals(Util.BLANK_QUOTES)||txtSurgeryDate.getText().equalsIgnoreCase("MM/dd/yyyy")){
            txtSurgeryDate.setText("MM/dd/yyyy");
            txtSurgeryDate.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_txtSurgeryDateFocusLost

    private void btnAddAssistsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddAssistsActionPerformed
        // TODO add your handling code here:
        if(cmbDoctors.getSelectedIndex()!=0){
            assists.add((Employee)cmbDoctors.getSelectedItem());
            populateTableAssists();
        }
    }//GEN-LAST:event_btnAddAssistsActionPerformed

    private void populateTableAssists(){
        DefaultTableModel dtm = (DefaultTableModel) tblAssistants.getModel();
        dtm.setRowCount(0);
        for(Employee employee: assists){
            Object row[] = new Object[2];
            row[0] = employee;
            for (Department dep : hospital.getDepartmentDirectory().getDepartmentList()) {
                for (UserAccount ua : dep.getUserAccountDirectory().getUserAccountList()) {
                    if (ua.getEmployee().equals(employee)) {
                        row[1] = ua.getRole();
                    }
                }
            }

            dtm.addRow(row);
        }
    }
    
    private boolean validateData(){
        int i=0;
        //Validate Surgery Name
        if (txtSurgeryName.getText().trim().equalsIgnoreCase("") || txtSurgeryName.getText().trim() == null) {
            txtSurgeryName.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            lblErrSurgeryName.setVisible(true);
            lblErrSurgeryName.setText("Please enter Surgery Name");
            i++;
        } else if (!UtilFunctions.validateTextOnly(txtSurgeryName.getText().trim())) {
            txtSurgeryName.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            lblErrSurgeryName.setVisible(true);
            lblErrSurgeryName.setText("Please enter only text in Surgery Name");
            i++;
        } else {
            lblErrSurgeryName.setVisible(false);
            txtSurgeryName.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
        }
        
        //Validate Surgery Date
        if(txtSurgeryDate.getText().trim().equalsIgnoreCase("")||txtSurgeryDate.getText().trim()==null||txtSurgeryDate.getText().equalsIgnoreCase("MM/dd/yyyy")){
            txtSurgeryDate.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            lblErrSurgeryDate.setVisible(true);
            lblErrSurgeryDate.setText("Please enter Surgery Date");
            i++;
        }
        else if(!UtilFunctions.validateDateFormat(txtSurgeryDate.getText().trim())){
            txtSurgeryDate.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            lblErrSurgeryDate.setVisible(true);
            lblErrSurgeryDate.setText("Please enter date in mm/dd/yyyy format");
            i++;
        }
        else if(!UtilFunctions.validatePastDate(txtSurgeryDate.getText().trim())){
            txtSurgeryDate.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            lblErrSurgeryDate.setVisible(true);
            lblErrSurgeryDate.setText("Can't accept past dates");
            i++;
        }
        else{
            txtSurgeryDate.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
            lblErrSurgeryDate.setVisible(false);
        }
        
        //Validate Surgery Description
        if(txtSurgeryDescription.getText().trim().equalsIgnoreCase("")||txtSurgeryDescription.getText().trim()==null){
            txtSurgeryDescription.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            lblErrSurgeryDescription.setVisible(true);
            lblErrSurgeryDescription.setText("Please enter Surgery Details");
            i++;
        }
        else if(!UtilFunctions.validateTextOnly(txtSurgeryDescription.getText().trim())){
            txtSurgeryDescription.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            lblErrSurgeryDescription.setVisible(true);
            lblErrSurgeryDescription.setText("Please enter only text");
            i++;
        }
        else{
            txtSurgeryDescription.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
            lblErrSurgeryDescription.setVisible(false);
        }
        
        //Validate Surgery Complications
        if(txtComplications.getText().trim().equalsIgnoreCase("")||txtComplications.getText().trim()==null){
            txtComplications.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            lblErrSurgeryComplications.setVisible(true);
            lblErrSurgeryComplications.setText("Please enter Surgery Complications");
            i++;
        }
        if(!UtilFunctions.validateTextOnly(txtComplications.getText().trim())){
            txtComplications.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            lblErrSurgeryComplications.setVisible(true);
            lblErrSurgeryComplications.setText("Please enter only text");
            i++;
        }
        else{
            txtComplications.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
            lblErrSurgeryComplications.setVisible(false);
        }
        
        //Validate Surgery Outcomes
        if(txtSurgeryOutcomes.getText().trim().equalsIgnoreCase("")||txtSurgeryOutcomes.getText().trim()==null){
            txtSurgeryOutcomes.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            lblErrSurgeryOutcome.setVisible(true);
            lblErrSurgeryOutcome.setText("Please enter Surgery Outcomes");
            i++;
        }
        else if(!UtilFunctions.validateTextOnly(txtSurgeryOutcomes.getText().trim())){
            txtSurgeryOutcomes.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            lblErrSurgeryOutcome.setVisible(true);
            lblErrSurgeryOutcome.setText("Please enter only text");
            i++;
        }
        else{
            txtSurgeryOutcomes.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
            lblErrSurgeryOutcome.setVisible(false);
        }
        
        if(txtVisitReason.getText().trim().equalsIgnoreCase("")||txtVisitReason.getText().trim()==null){
            txtVisitReason.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            lblErrVisitReason.setVisible(true);
            lblErrVisitReason.setText("Please enter visit reason");
            i++;
        }
        else if(!UtilFunctions.validateNumberAndText(txtVisitReason.getText().trim())){
            txtVisitReason.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            lblErrVisitReason.setVisible(true);
            lblErrVisitReason.setText("Please enter only text and numbers");
            i++;
        }
        else{
            txtVisitReason.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
            lblErrVisitReason.setVisible(false);
        }
        
        if(i==0){
            return true;
        }
        else{
            return false;
        }
    }
    
    private void goBack(){
        cardContainer.remove(this);
        Component[] componentArray = cardContainer.getComponents();
        Component component= componentArray[componentArray.length - 1];
        PatientDetailsJPanel patientDetailsJPanel = (PatientDetailsJPanel) component;
        patientDetailsJPanel.populateTable();
        CardLayout layout = (CardLayout) cardContainer.getLayout();
        layout.previous(cardContainer);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddAssists;
    private javax.swing.JButton btnAddSurgery;
    private javax.swing.JButton btnBack;
    private javax.swing.JComboBox cmbDoctors;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblErrSurgeryComplications;
    private javax.swing.JLabel lblErrSurgeryDate;
    private javax.swing.JLabel lblErrSurgeryDescription;
    private javax.swing.JLabel lblErrSurgeryName;
    private javax.swing.JLabel lblErrSurgeryOutcome;
    private javax.swing.JLabel lblErrVisitReason;
    private javax.swing.JLabel lblHeading;
    private javax.swing.JLabel lblLoggedInUser;
    private javax.swing.JLabel lblPerformedBy;
    private javax.swing.JLabel lblVisitDate;
    private javax.swing.JTable tblAssistants;
    private javax.swing.JTextField txtComplications;
    private javax.swing.JTextField txtSurgeryDate;
    private javax.swing.JTextField txtSurgeryDescription;
    private javax.swing.JTextField txtSurgeryName;
    private javax.swing.JTextField txtSurgeryOutcomes;
    private javax.swing.JTextArea txtVisitReason;
    // End of variables declaration//GEN-END:variables
}
