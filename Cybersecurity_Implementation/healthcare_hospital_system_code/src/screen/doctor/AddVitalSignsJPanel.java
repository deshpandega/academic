/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package screen.doctor;

import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.apache.log4j.Logger;
import source.hospital.Hospital;
import source.patient.Patient;
import source.patient.VitalSigns;
import source.userAccount.UserAccount;
import source.util.UtilFunctions;

/**
 *
 * @author GaurangDeshpande
 */
public class AddVitalSignsJPanel extends javax.swing.JPanel {

    private JPanel cardContainer;
    private UserAccount account;
    private Patient patient;
    private Hospital hospital;
    private static Logger log;
    
    /**
     * Creates new form AddVitalSignsJPanel
     */
    AddVitalSignsJPanel(JPanel cardContainer, UserAccount account, Patient patient, Hospital hospital) {
        initComponents();
        this.cardContainer = cardContainer;
        this.account = account;
        this.patient = patient;
        this.hospital = hospital;
        log = Logger.getLogger(AddVitalSignsJPanel.class);
        lblLoggedInUser.setText(account.getEmployee().getPerson().getLastName()+", "+account.getEmployee().getPerson().getFirstName());
        
        lblVisitDate.setText(String.valueOf(new Date()));
        initialSetup();
    }

    private void initialSetup() {
        txtBloodPressure.setText("");
        lblErrBloodPressure.setText("");
        lblErrBloodPressure.setVisible(false);
        
        txtPulseRate.setText("");
        lblErrPulseRate.setText("");
        lblErrPulseRate.setVisible(false);
        
        txtWeight.setText("");
        lblErrWeight.setText("");
        lblErrWeight.setVisible(false);
        
        txtRespirationRate.setText("");
        lblErrRespirationRate.setText("");
        lblErrRespirationRate.setVisible(false);
        
        txtBloodGlucoseLevel.setText("");
        lblErrBloodGlucoseLevel.setText("");
        lblErrBloodGlucoseLevel.setVisible(false);
        
        txtHeight.setText("");
        lblErrHeight.setText("");
        lblErrHeight.setVisible(false);
        
        txtTemperature.setText("");
        lblErrTemperature.setText("");
        lblErrTemperature.setVisible(false);
        
        txtVisitReason.setText("");
        lblErrVisitReason.setText("");
        lblErrVisitReason.setVisible(false);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblLoggedInUser = new javax.swing.JLabel();
        lblHeading = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        txtBloodPressure = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtPulseRate = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtWeight = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtRespirationRate = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtBloodGlucoseLevel = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtHeight = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtTemperature = new javax.swing.JTextField();
        btnAddVitalSign = new javax.swing.JButton();
        lblErrBloodPressure = new javax.swing.JLabel();
        lblErrPulseRate = new javax.swing.JLabel();
        lblErrWeight = new javax.swing.JLabel();
        lblErrRespirationRate = new javax.swing.JLabel();
        lblErrBloodGlucoseLevel = new javax.swing.JLabel();
        lblErrHeight = new javax.swing.JLabel();
        lblErrTemperature = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        lblErrVisitReason = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtVisitReason = new javax.swing.JTextArea();
        jLabel12 = new javax.swing.JLabel();
        lblVisitDate = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        lblLoggedInUser.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblLoggedInUser.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);

        lblHeading.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        lblHeading.setText("Add Vital Signs");

        btnBack.setBackground(new java.awt.Color(51, 51, 51));
        btnBack.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        txtBloodPressure.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("Blood Pressure:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel5.setText("Pulse Rate:");

        txtPulseRate.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel6.setText("Weight:");

        txtWeight.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel7.setText("Respiration Rate:");

        txtRespirationRate.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel8.setText("Blood Glucose Level:");

        txtBloodGlucoseLevel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel9.setText("Height:");

        txtHeight.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel10.setText("Temperature:");

        txtTemperature.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        btnAddVitalSign.setBackground(new java.awt.Color(51, 51, 51));
        btnAddVitalSign.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnAddVitalSign.setForeground(new java.awt.Color(255, 255, 255));
        btnAddVitalSign.setText("Add Vital Signs");
        btnAddVitalSign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddVitalSignActionPerformed(evt);
            }
        });

        lblErrBloodPressure.setForeground(new java.awt.Color(255, 51, 0));
        lblErrBloodPressure.setText("lblErr");

        lblErrPulseRate.setForeground(new java.awt.Color(255, 51, 0));
        lblErrPulseRate.setText("lblErr");

        lblErrWeight.setForeground(new java.awt.Color(255, 51, 0));
        lblErrWeight.setText("lblErr");

        lblErrRespirationRate.setForeground(new java.awt.Color(255, 51, 0));
        lblErrRespirationRate.setText("lblErr");

        lblErrBloodGlucoseLevel.setForeground(new java.awt.Color(255, 51, 0));
        lblErrBloodGlucoseLevel.setText("lblErr");

        lblErrHeight.setForeground(new java.awt.Color(255, 51, 0));
        lblErrHeight.setText("lblErr");

        lblErrTemperature.setForeground(new java.awt.Color(255, 51, 0));
        lblErrTemperature.setText("lblErr");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel11.setText("Reason for visit:");

        lblErrVisitReason.setForeground(new java.awt.Color(255, 51, 0));
        lblErrVisitReason.setText("lblErr");

        txtVisitReason.setColumns(20);
        txtVisitReason.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        txtVisitReason.setRows(4);
        jScrollPane1.setViewportView(txtVisitReason);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel12.setText("Visit Time:");

        lblVisitDate.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblVisitDate.setText("Reason for visit:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblHeading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtPulseRate, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblErrPulseRate, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtBloodPressure, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblErrBloodPressure, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblErrWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtRespirationRate, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblErrRespirationRate, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtBloodGlucoseLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblErrBloodGlucoseLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtHeight, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                                            .addComponent(txtTemperature, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                                            .addComponent(btnAddVitalSign, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblErrHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblErrTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(lblVisitDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblErrVisitReason, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(170, 170, 170))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblLoggedInUser, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblLoggedInUser, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblVisitDate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblErrVisitReason)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBloodPressure, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblErrBloodPressure))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPulseRate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblErrPulseRate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblErrWeight))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRespirationRate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblErrRespirationRate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBloodGlucoseLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblErrBloodGlucoseLevel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblErrHeight))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblErrTemperature))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAddVitalSign, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        goBack();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAddVitalSignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddVitalSignActionPerformed
        // TODO add your handling code here:
        boolean allDataEnteredCorrectly = validateData();
        if(allDataEnteredCorrectly){
            log.info(UtilFunctions.encrypt("VS_ADD : "+account.getEmployee()));
            VitalSigns vitalSign = patient.getVitalSignHistory().addVitalSign();
            
            if(!txtBloodPressure.getText().trim().equalsIgnoreCase("")){
                vitalSign.setBloodPressure(Integer.parseInt(txtBloodPressure.getText().trim()));
            }
            if(!txtPulseRate.getText().trim().equalsIgnoreCase("")){
                vitalSign.setPulseRate(Integer.parseInt(txtPulseRate.getText().trim()));
            }
            if(!txtWeight.getText().trim().equalsIgnoreCase("")){
                vitalSign.setWeight(Integer.parseInt(txtWeight.getText().trim()));
            }
            if(!txtRespirationRate.getText().trim().equalsIgnoreCase("")){
                vitalSign.setRespirationRate(Integer.parseInt(txtRespirationRate.getText().trim()));
            }
            if(!txtBloodGlucoseLevel.getText().trim().equalsIgnoreCase("")){
                vitalSign.setBloodGlucoseLevel(Integer.parseInt(txtBloodGlucoseLevel.getText().trim()));
            }
            if(!txtHeight.getText().trim().equalsIgnoreCase("")){
                vitalSign.setHeight(Integer.parseInt(txtHeight.getText().trim()));
            }
            if(!txtTemperature.getText().trim().equalsIgnoreCase("")){
                vitalSign.setTemperature(Integer.parseInt(txtTemperature.getText().trim()));
            }
            
            Date lastVisit = new Date();
            patient.setLastVisited(lastVisit);
            patient.setComments(txtVisitReason.getText().trim());
            
            vitalSign.setPurpose(txtVisitReason.getText().trim());
            vitalSign.setVisitDate(lastVisit);
            
            initialSetup();
            if(patient.getPerson().getEmailAddress()!=null){
                UtilFunctions.sendEmail(patient.getPerson().getEmailAddress(), patient.getPerson().getFirstName()+" "+patient.getPerson().getLastName(), "General visit", txtVisitReason.getText().trim());
            }
            JOptionPane.showMessageDialog(null,"Vital Sign Added!", "INFORMATION", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnAddVitalSignActionPerformed

    private boolean validateData(){
        int i=0;
        //Validate Blood Pressure
        if (txtBloodPressure.getText().trim().equalsIgnoreCase("") || txtBloodPressure.getText().trim() == null) {
            txtBloodPressure.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
            lblErrBloodPressure.setVisible(false);
        } else if (!UtilFunctions.validateNumericalsOnly(txtBloodPressure.getText().trim())) {
            txtBloodPressure.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            lblErrBloodPressure.setVisible(true);
            lblErrBloodPressure.setText("Please enter only numbers in Blood Pressure");
            i++;
        } else {
            lblErrBloodPressure.setVisible(false);
            txtBloodPressure.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
        }
        
        //Validate Pulse Rate
        if(txtPulseRate.getText().trim().equalsIgnoreCase("")||txtPulseRate.getText().trim()==null){
            txtPulseRate.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
            lblErrPulseRate.setVisible(false);
        }
        else if(!UtilFunctions.validateNumericalsOnly(txtPulseRate.getText().trim())){
            txtPulseRate.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            lblErrPulseRate.setVisible(true);
            lblErrPulseRate.setText("Please enter only numbers in Pulse Rate");
            i++;
        }
        else{
            txtPulseRate.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
            lblErrPulseRate.setVisible(false);
        }
        
        //Validate Weight
        if(txtWeight.getText().trim().equalsIgnoreCase("")||txtWeight.getText().trim()==null){
            txtWeight.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
            lblErrWeight.setVisible(false);
        }
        else if(!UtilFunctions.validateNumericalsOnly(txtWeight.getText().trim())){
            txtWeight.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            lblErrWeight.setVisible(true);
            lblErrWeight.setText("Please enter only numbers in Weight");
            i++;
        }
        else{
            txtWeight.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
            lblErrWeight.setVisible(false);
        }
        
        //Validate Respiration Rate
        if(txtRespirationRate.getText().trim().equalsIgnoreCase("")||txtRespirationRate.getText().trim()==null){
            txtRespirationRate.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
            lblErrRespirationRate.setVisible(false);
        }
        if(!UtilFunctions.validateNumericalsOnly(txtRespirationRate.getText().trim())){
            txtRespirationRate.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            lblErrRespirationRate.setVisible(true);
            lblErrRespirationRate.setText("Please enter numbers in Respiration Rate");
            i++;
        }
        else{
            txtRespirationRate.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
            lblErrRespirationRate.setVisible(false);
        }
        
        //Validate Glucose Level
        if(txtBloodGlucoseLevel.getText().trim().equalsIgnoreCase("")||txtBloodGlucoseLevel.getText().trim()==null){
            txtBloodGlucoseLevel.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
            lblErrBloodGlucoseLevel.setVisible(false);
        }
        else if(!UtilFunctions.validateNumericalsOnly(txtBloodGlucoseLevel.getText().trim())){
            txtBloodGlucoseLevel.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            lblErrBloodGlucoseLevel.setVisible(true);
            lblErrBloodGlucoseLevel.setText("Please enter numbers in Blood Glucose Level");
            i++;
        }
        else{
            txtBloodGlucoseLevel.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
            lblErrBloodGlucoseLevel.setVisible(false);
        }
        
        //Validate Height
        if(txtHeight.getText().trim().equalsIgnoreCase("")||txtHeight.getText().trim()==null){
            txtHeight.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
            lblErrHeight.setVisible(false);
        }
        else if(!UtilFunctions.validateNumericalsOnly(txtHeight.getText().trim())){
            txtHeight.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            lblErrHeight.setVisible(true);
            lblErrHeight.setText("Please enter numbers in Height");
            i++;
        }
        else{
            txtHeight.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
            lblErrHeight.setVisible(false);
        }
        
        //Validate Temperature
        if(txtTemperature.getText().trim().equalsIgnoreCase("")||txtTemperature.getText().trim()==null){
            txtTemperature.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
            lblErrTemperature.setVisible(false);
        }
        else if(!UtilFunctions.validateNumericalsOnly(txtTemperature.getText().trim())){
            txtTemperature.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            lblErrTemperature.setVisible(true);
            lblErrTemperature.setText("Please enter numbers in temperature");
            i++;
        }
        else{
            txtTemperature.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
            lblErrTemperature.setVisible(false);
        }
        
        if(txtVisitReason.getText().trim().equalsIgnoreCase("")||txtVisitReason.getText().trim()==null){
            txtVisitReason.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            lblErrVisitReason.setVisible(true);
            lblErrVisitReason.setText("Please enter visit reason");
            i++;
        }
        else if(!UtilFunctions.validateNumberAndText(txtVisitReason.getText().trim())){
            txtVisitReason.setBorder(javax.swing.BorderFactory.createLineBorder(Color.RED));
            lblErrVisitReason.setVisible(true);
            lblErrVisitReason.setText("Please enter only text and numbers");
            i++;
        }
        else{
            txtVisitReason.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
            lblErrVisitReason.setVisible(false);
        }
        
        if(i==0){
            return true;
        }
        else{
            return false;
        }
    }
    
    private void goBack(){
        cardContainer.remove(this);
        Component[] componentArray = cardContainer.getComponents();
        Component component= componentArray[componentArray.length - 1];
        PatientDetailsJPanel patientDetailsJPanel = (PatientDetailsJPanel) component;
        patientDetailsJPanel.populateTable();
        CardLayout layout = (CardLayout) cardContainer.getLayout();
        layout.previous(cardContainer);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddVitalSign;
    private javax.swing.JButton btnBack;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblErrBloodGlucoseLevel;
    private javax.swing.JLabel lblErrBloodPressure;
    private javax.swing.JLabel lblErrHeight;
    private javax.swing.JLabel lblErrPulseRate;
    private javax.swing.JLabel lblErrRespirationRate;
    private javax.swing.JLabel lblErrTemperature;
    private javax.swing.JLabel lblErrVisitReason;
    private javax.swing.JLabel lblErrWeight;
    private javax.swing.JLabel lblHeading;
    private javax.swing.JLabel lblLoggedInUser;
    private javax.swing.JLabel lblVisitDate;
    private javax.swing.JTextField txtBloodGlucoseLevel;
    private javax.swing.JTextField txtBloodPressure;
    private javax.swing.JTextField txtHeight;
    private javax.swing.JTextField txtPulseRate;
    private javax.swing.JTextField txtRespirationRate;
    private javax.swing.JTextField txtTemperature;
    private javax.swing.JTextArea txtVisitReason;
    private javax.swing.JTextField txtWeight;
    // End of variables declaration//GEN-END:variables
}
